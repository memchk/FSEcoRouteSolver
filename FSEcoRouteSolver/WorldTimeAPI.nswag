{
  "runtime": "NetCore21",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "openapi: \"3.0.1\"\r\ninfo:\r\n  title: \"World Time API\"\r\n  version: \"20190526\"\r\n  description: >-\r\n    A simple API to get the current time based on\r\n    a request with a timezone.\r\n\r\nservers:\r\n  - url: https://worldtimeapi.org/api/\r\n\r\npaths:\r\n  /timezone:\r\n    get:\r\n      summary: a listing of all timezones.\r\n      responses:\r\n        default:\r\n          $ref: \"#/components/responses/SuccessfulListJsonResponse\"\r\n\r\n  /timezone/{area}:\r\n    get:\r\n      summary: a listing of all timezones available for that area.\r\n      parameters:\r\n        - name: area\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          $ref: \"#/components/responses/SuccessfulListJsonResponse\"\r\n        default:\r\n          $ref: \"#/components/responses/ErrorJsonResponse\"\r\n\r\n  /timezone/{area}/{location}:\r\n    get:\r\n      summary: request the current time for a timezone.\r\n      parameters:\r\n        - name: area\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n        - name: location\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          $ref: \"#/components/responses/SuccessfulDateTimeJsonResponse\"\r\n        default:\r\n          $ref: \"#/components/responses/ErrorJsonResponse\"\r\n\r\n  /timezone/{area}/{location}/{region}:\r\n    get:\r\n      summary: request the current time for a timezone.\r\n      parameters:\r\n        - name: area\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n        - name: location\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n        - name: region\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          $ref: \"#/components/responses/SuccessfulDateTimeJsonResponse\"\r\n        default:\r\n          $ref: \"#/components/responses/ErrorJsonResponse\"\r\n  /ip:\r\n    get:\r\n      summary: >-\r\n        request the current time based on the ip of the request.\r\n        note: this is a \"best guess\" obtained from open-source data.\r\n      responses:\r\n        '200':\r\n          $ref: \"#/components/responses/SuccessfulDateTimeJsonResponse\"\r\n        default:\r\n          $ref: \"#/components/responses/ErrorJsonResponse\"\r\n\r\n  /ip/{ipv4}:\r\n    get:\r\n      summary: >-\r\n        request the current time based on the ip of the request.\r\n        note: this is a \"best guess\" obtained from open-source data.\r\n      parameters:\r\n        - name: ipv4\r\n          in: path\r\n          required: true\r\n          schema:\r\n            type: string\r\n      responses:\r\n        '200':\r\n          $ref: \"#/components/responses/SuccessfulDateTimeJsonResponse\"\r\n        default:\r\n          $ref: \"#/components/responses/ErrorJsonResponse\"\r\n\r\ncomponents:\r\n  responses:\r\n    SuccessfulListJsonResponse:\r\n      description: >-\r\n        the list of available timezones in JSON format\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/ListJsonResponse\"\r\n    SuccessfulListTextResponse:\r\n      description: >-\r\n        the list of available timezones in plain text\r\n      content:\r\n        text/plain:\r\n          schema:\r\n            $ref: \"#/components/schemas/ListTextResponse\"\r\n\r\n    SuccessfulDateTimeJsonResponse:\r\n      description: >-\r\n        the current time for the timezone requested in JSON format\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/DateTimeJsonResponse\"\r\n    SuccessfulDateTimeTextResponse:\r\n      description: >-\r\n        the current time for the timezone requested in plain text\r\n      content:\r\n        text/plain:\r\n          schema:\r\n            $ref: \"#/components/schemas/DateTimeTextResponse\"\r\n\r\n    ErrorJsonResponse:\r\n      description: >-\r\n        an error response in JSON format\r\n      content:\r\n        application/json:\r\n          schema:\r\n            $ref: \"#/components/schemas/ErrorJsonResponse\"\r\n    ErrorTextResponse:\r\n      description: >-\r\n        an error response in plain text\r\n      content:\r\n        text/plain:\r\n          schema:\r\n            $ref: \"#/components/schemas/ErrorTextResponse\"\r\n\r\n  schemas:\r\n    ListJsonResponse:\r\n      type: array\r\n      description: >-\r\n        a list of available timezones\r\n\r\n    ListTextResponse:\r\n      type: string\r\n      description: >-\r\n        a list of available timezones, one per line\r\n\r\n    DateTimeJsonResponse:\r\n      required:\r\n        - abbreviation\r\n        - client_ip\r\n        - datetime\r\n        - day_of_week\r\n        - day_of_year\r\n        - dst\r\n        - dst_offset\r\n        - timezone\r\n        - unixtime\r\n        - utc_datetime\r\n        - utc_offset\r\n        - week_number\r\n      properties:\r\n        abbreviation:\r\n          type: string\r\n          description: >-\r\n            the abbreviated name of the timezone\r\n        client_ip:\r\n          type: string\r\n          description: >-\r\n            the IP of the client making the request\r\n        datetime:\r\n          type: string\r\n          description: >-\r\n            an ISO8601-valid string representing\r\n            the current, local date/time\r\n        day_of_week:\r\n          type: integer\r\n          description: >-\r\n            current day number of the week, where sunday is 0\r\n        day_of_year:\r\n          type: integer\r\n          description: >-\r\n            ordinal date of the current year\r\n        dst:\r\n          type: boolean\r\n          description: >-\r\n            flag indicating whether the local\r\n            time is in daylight savings\r\n        dst_from:\r\n          type: string\r\n          nullable: true\r\n          description: >-\r\n            an ISO8601-valid string representing\r\n            the datetime when daylight savings\r\n            started for this timezone\r\n        dst_offset:\r\n          type: integer\r\n          description: >-\r\n            the difference in seconds between the current local\r\n            time and daylight saving time for the location\r\n        dst_until:\r\n          type: string\r\n          nullable: true\r\n          description: >-\r\n            an ISO8601-valid string representing\r\n            the datetime when daylight savings\r\n            will end for this timezone\r\n        raw_offset:\r\n          type: integer\r\n          description: >-\r\n            the difference in seconds between the current local time\r\n            and the time in UTC, excluding any daylight saving difference\r\n            (see dst_offset)\r\n        timezone:\r\n          type: string\r\n          description: >-\r\n            timezone in `Area/Location` or\r\n            `Area/Location/Region` format\r\n        unixtime:\r\n          type: integer\r\n          description: >-\r\n            number of seconds since the Epoch\r\n        utc_datetime:\r\n          type: string\r\n          description: >-\r\n            an ISO8601-valid string representing\r\n            the current date/time in UTC\r\n        utc_offset:\r\n          type: string\r\n          description: >-\r\n            an ISO8601-valid string representing\r\n            the offset from UTC\r\n        week_number:\r\n          type: integer\r\n          description: >-\r\n            the current week number\r\n\r\n    DateTimeTextResponse:\r\n      type: string\r\n      description: >-\r\n        time zone details, as per the DateTimeJsonResponse\r\n        response, in the format `key: value`, one item per line\r\n\r\n    ErrorJsonResponse:\r\n      required:\r\n        - error\r\n      properties:\r\n        error:\r\n          type: string\r\n          description: >-\r\n            details about the error encountered\r\n\r\n    ErrorTextResponse:\r\n      type: string\r\n      description: >-\r\n        details about the error encountered in plain text\r\n",
      "url": "",
      "output": null
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "ApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": "MyNamespace.Contract",
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "{controller}TimeClient",
      "operationGenerationMode": "MultipleClientsFromOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "FSEcoRouteSolver.API",
      "requiredPropertiesMustBeDefined": false,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "API/TimeClient.generated.cs"
    }
  }
}